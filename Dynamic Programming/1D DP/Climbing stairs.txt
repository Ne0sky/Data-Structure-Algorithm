
class Solution {
//memoization solution
// private:
//     int f(int idx, vector<int> &dp){
//         if(idx<=1) return 1;

//         if(dp[idx]!=-1)
//         return dp[idx];

//         int left = f(idx-1, dp);
//         int right = f(idx-2, dp);

//         dp[idx] = left + right;

//         return dp[idx];
//     }
   
public:
    int climbStairs(int n) {
        vector<int> dp(n+1, -1); // Memoization table
        dp[0] = dp[1] = 1;
        //dp[n] = f(n,dp); memoization
        for(int i=2; i<=n;i++){
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n];
    }
};